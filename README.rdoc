= Striuct

http://github.com/kachick/striuct

== DESCRIPTION

Striuct meanings Strict Struct.

This container class looks like Struct. And you can use conditions.

== FEATURES

* you can use conditions for each member
* like Struct API and more
* pure-ruby

== PLOBLEMS

* usage
* documentation

== PLAN

* add Subclass macro:
  safe_level:
    change check level for accessor name

== SYNOPSIS

* setup
    require 'striuct'

* basic
    class User < Striuct.new
      member :id, Integer
      member :last_name, /\A\w+\z/
      member :family_name, /\A\w+\z/
      member :address, /\A((\w+) ?)+\z/
      member(:age) {|v|(20..140).include? v}
    end

    # pass
    user = User.new 128381, 'bar', 'foo', 'Tokyo Japan', 20

    # fail (Exception)
    user.age = 19

* has API looks standard Struct
    User2 = Striuct.new :id, :last_name, :family_name, :address, :age

* mix
    User3 = Striuct.new do
      member :name, /\A\w+\z/, /\A\w+ \w+\z/
    end

* But, Ruby's objects always can be destroyed. Use easy checker for this case.
    user.strict? #=> true
    user.last_name.clear
    user.strict? #=> false

== REQUIREMENTS

=== Ruby
* 1.9.3
* 1.9.2

== INSTALL

* sudo gem install striuct

== LICENSE

(The MIT License)

Copyright (c) 2011  Kenichi Kamiya

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.